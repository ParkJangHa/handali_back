name: Deploy Spring Boot to Mac Server

on:
  push:
    branches:
      - release/* # release로 시작하는 모든 브랜치에서 배포 실행
      - main

jobs:
  build:
    runs-on: ubuntu-latest # GitHub Actions에서 실행될 환경

    steps:
      - name: Checkout Repository # github 저장소 코드 가져오기
        uses: actions/checkout@v3

      - name : Set up JDK 17
        uses : actions/setup-java@v3
        with :
          distribution : 'temurin'
          java-version : '17'
      
      - name : Build with gradle
        run : |
          cd $GITHUB_WORKSPACE/handali
          ./gradlew build

      - name : Upload build artifact
        uses : actions/upload-artifact@v4
        with : 
          name : spring-boot-app
          path : /home/runner/work/handali_back/handali_back/handali/build/libs/handali-0.0.1-SNAPSHOT.jar
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name : Download build Artifact
        uses : actions/download-artifact@v4
        with :
          name : spring-boot-app
          path : build/libs/

      - name : Set up ssh key
        run : |
           mkdir -p ~/.ssh
           echo "${{ secrets.MACBOOK_SSH_KEY }}" > ~/.ssh/id_rsa
           chmod 600 ~/.ssh/id_rsa
           ssh-keyscan -H ${{ secrets.MACBOOK_HOST }} >> ~/.ssh/known_hosts

      - name: Copy JAR file to Mac Server
        run: |
          scp -i ~/.ssh/id_rsa build/libs/*.jar ${{ secrets.MACBOOK_USER }}@${{ secrets.MACBOOK_HOST }}:~/server/temp/

      
      - name: Deploy Spring Boot to Mac Server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.MACBOOK_HOST }}
          username: ${{ secrets.MACBOOK_USER }}
          key: ${{ secrets.MACBOOK_SSH_KEY }}
          script: |
          
            BRANCH="${{ github.ref_name }}"
            if [ "$BRANCH" = "main" ]; then
              PROFILE=prod
              COMPOSE_FILE=docker-compose.prod.yml
              JAR_NAME=handali-main.jar
            else
              PROFILE=dev
              COMPOSE_FILE=docker-compose.dev.yml
              SHORT_BRANCH=$(echo $BRANCH | sed 's|release/||')
              JAR_NAME=handali-release-$SHORT_BRANCH.jar
            fi

            echo "Deploying branch $BRANCH as $JAR_NAME with $COMPOSE_FILE"
            
            # 서버 디렉토리 초기화
            rm -f ~/server/$JAR_NAME

            # JAR 이동
            mv ~/server/temp/*.jar ~/server/$JAR_NAME || echo "No JAR found!"
            
            # 서버 디렉토리로 이동
            cd ~/server
            
            # 컨테이너 재시작
            export PATH="/usr/local/bin:$PATH"
            docker-compose -f $COMPOSE_FILE down || true
            docker-compose -f $COMPOSE_FILE up --build -d

